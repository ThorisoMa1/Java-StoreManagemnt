/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project_1.Presentation.Admin_Dept;

import com.sun.org.apache.xpath.internal.operations.Bool;
import java.awt.Component;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Date;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.MutableComboBoxModel;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.JXTable;
import project_1.Business_Layer.Book;
import project_1.Business_Layer.CreateReportPdf;
import project_1.Business_Layer.ItemClass;
import project_1.Business_Layer.Lists;
import project_1.Business_Layer.Uniforms;
import project_1.Presentation.Store_Management_Menu;

/**
 *
 * @author TeezyT
 */
public class Manage_Stock extends javax.swing.JFrame {

    static boolean change;
    static boolean book_change;
    static boolean uniform_change;
    static DefaultTableModel dtm_uniform;
    static DefaultTableModel dtm_book;
    static int selectedi;
    static int LastSelectedi;
    static String Type;
    static String ID;

    /**
     * Creates new form Manage_Stock
     */
    public Manage_Stock() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        seaGlassComboBoxUI1 = new com.seaglasslookandfeel.ui.SeaGlassComboBoxUI();
        seaGlassComboBoxUI2 = new com.seaglasslookandfeel.ui.SeaGlassComboBoxUI();
        seaGlassComboBoxUI3 = new com.seaglasslookandfeel.ui.SeaGlassComboBoxUI();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        txt_name = new javax.swing.JTextField();
        txt_Quantity = new javax.swing.JTextField();
        txt_Price = new javax.swing.JTextField();
        lbl_name = new javax.swing.JLabel();
        lbl_Quantity = new javax.swing.JLabel();
        lbl_Date = new javax.swing.JLabel();
        lbl_Price = new javax.swing.JLabel();
        lbl_desc = new javax.swing.JLabel();
        dt_Date = new org.jdesktop.swingx.JXDatePicker();
        txt_Search = new org.jdesktop.swingx.JXTextField();
        jXLabel1 = new org.jdesktop.swingx.JXLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_Book = new org.jdesktop.swingx.JXTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_Uniform = new org.jdesktop.swingx.JXTable();
        lbl_Author = new org.jdesktop.swingx.JXLabel();
        lbl_Size = new org.jdesktop.swingx.JXLabel();
        lbl_Genre = new org.jdesktop.swingx.JXLabel();
        txt_Author = new org.jdesktop.swingx.JXTextField();
        cbo_Size = new org.jdesktop.swingx.JXComboBox();
        cbo_Genre = new org.jdesktop.swingx.JXComboBox();
        jScrollPane4 = new javax.swing.JScrollPane();
        txt_desc = new org.jdesktop.swingx.JXTextArea();
        btn_refresh = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jButton1.setText("Update");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Add");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        txt_name.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txt_namePropertyChange(evt);
            }
        });

        txt_Quantity.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txt_QuantityPropertyChange(evt);
            }
        });

        txt_Price.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txt_PricePropertyChange(evt);
            }
        });

        lbl_name.setText("Name");

        lbl_Quantity.setText("Quantity");

        lbl_Date.setText("Date");

        lbl_Price.setText("Price");

        lbl_desc.setText("Description");

        dt_Date.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dt_DatePropertyChange(evt);
            }
        });

        txt_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_SearchActionPerformed(evt);
            }
        });
        txt_Search.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txt_SearchPropertyChange(evt);
            }
        });
        txt_Search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_SearchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_SearchKeyTyped(evt);
            }
        });

        jXLabel1.setText("Search");

        tbl_Book.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_Book.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tbl_BookFocusGained(evt);
            }
        });
        tbl_Book.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_BookMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tbl_BookMouseEntered(evt);
            }
        });
        jScrollPane2.setViewportView(tbl_Book);

        jScrollPane5.setViewportView(jScrollPane2);

        tbl_Uniform.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_Uniform.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_UniformMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tbl_UniformMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_Uniform);

        jScrollPane3.setViewportView(jScrollPane1);

        lbl_Author.setText("Author");

        lbl_Size.setText("Size");

        lbl_Genre.setText("Genre");

        txt_Author.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txt_AuthorPropertyChange(evt);
            }
        });

        cbo_Size.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cbo_SizePropertyChange(evt);
            }
        });

        cbo_Genre.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cbo_GenrePropertyChange(evt);
            }
        });

        txt_desc.setColumns(20);
        txt_desc.setRows(5);
        txt_desc.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txt_descPropertyChange(evt);
            }
        });
        jScrollPane4.setViewportView(txt_desc);

        btn_refresh.setText("Refresh");
        btn_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refreshActionPerformed(evt);
            }
        });

        jButton4.setText("Export");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Perpetua Titling MT", 1, 12)); // NOI18N
        jLabel1.setText("               Uniforms");

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Perpetua Titling MT", 1, 12)); // NOI18N
        jLabel2.setText("             Books");

        jButton5.setText("Switchboard");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbl_desc)
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lbl_Author, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbl_Price)
                                        .addGap(23, 23, 23)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_Author, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txt_Price, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lbl_Genre, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_Size, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbo_Size, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbo_Genre, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btn_refresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(57, 57, 57))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_Quantity)
                                    .addComponent(lbl_name)
                                    .addComponent(lbl_Date))
                                .addGap(11, 11, 11))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jXLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dt_Date, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txt_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(474, 474, 474)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(232, 232, 232)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(372, 372, 372)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(625, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jXLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_name)
                            .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_Quantity)
                            .addComponent(txt_Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_Date)
                            .addComponent(dt_Date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_Price)
                            .addComponent(txt_Price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_Author, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_Author, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbo_Size, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_Size, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_Genre, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbo_Genre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn_refresh))
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lbl_desc)
                        .addGap(47, 47, 47))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(16, 16, 16)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(379, Short.MAX_VALUE)))
        );

        txt_name.getAccessibleContext().setAccessibleName("txt_name");
        txt_Quantity.getAccessibleContext().setAccessibleName("txt_quantity");
        txt_Price.getAccessibleContext().setAccessibleName("txt_Price");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        book_change = false;
        uniform_change = false;
        change = false;
        Type = "uniform";//sets default type
        ShowuniformFields();

        PopulateJtable();//Populates Both tables
        PopGenreTxt();//pops genres
        PopSizes();//populates sizes


    }//GEN-LAST:event_formWindowOpened
    private void PopGenreTxt() {

        Lists.item = new Book();
        Lists.item.GetAllGenres();
        cbo_Genre.addItem(Lists.genres);
        cbo_Genre.setModel(new DefaultComboBoxModel());
        //JComboBox box = new JComboBox(new DefaultComboBoxModel());

        MutableComboBoxModel model = (DefaultComboBoxModel) cbo_Genre.getModel();

        for (String genre : Lists.genres) {

            model.addElement(genre);

        }

    }

    private void PopSizes() {

        Lists.item = new Uniforms();
        Lists.item.GetAllSizes();//populates lists sizes
        cbo_Size.addItem(Lists.sizes);
        cbo_Size.setModel(new DefaultComboBoxModel());
        //JComboBox box = new JComboBox(new DefaultComboBoxModel());

        MutableComboBoxModel sizemodel = (DefaultComboBoxModel) cbo_Size.getModel();

        Lists.sizes.stream().forEach((size) -> {
            sizemodel.addElement(size);
        });

    }

    private void PopAuthors() {
        //Lists.item.GetAllAuthors();
    }

    private void PopulateJtable() {

        dtm_uniform = new DefaultTableModel();
        dtm_book = new DefaultTableModel();

        PopLists();//gets list items

        String[] Uniform_ColNames = new String[]{"ID", "Type", "Date Added", "Size", "Quantity", "Price", "Total"};

        String[] Book_ColNames = new String[]{"ID", "Name", "Author", "Description", "Date published", "Date Added", "Genre", "Quanitity", "Price", "Total"};

        dtm_uniform.setColumnIdentifiers(Uniform_ColNames);
        dtm_book.setColumnIdentifiers(Book_ColNames);

        //sets models for both
        tbl_Uniform.setModel(dtm_uniform);
        tbl_Uniform.setAutoResizeMode(15);
        tbl_Book.setAutoResizeMode(15);
        tbl_Book.setModel(dtm_book);

        tbl_Uniform.setEditable(false);
        tbl_Book.setEditable(false);

        newBuild();

        jScrollPane1.setViewportView(tbl_Uniform);
        if (Type != null) {
            if (Type == "uniform") {
                tbl_Uniform.setRowSelectionInterval(selectedi, selectedi);

                SetboxValues();//sets the bdings

            } else {
                tbl_Book.setRowSelectionInterval(selectedi, selectedi);

                SetboxValues();//sets the bdings
            }

        }

        // SetboxValues();
    } //poulates the j Table with itrm data

    private static void PopLists() {

        ArrayList<ItemClass> ac = new ArrayList<>();
        Lists.items = new ArrayList<>();

        ac.add(new Uniforms());
        ac.add(new Book());

        BusinessClassListupdate(ac);
    }

    private static void PopLitsSeach(String Text) {

        ArrayList<ItemClass> ac = new ArrayList<>();
        Lists.items = new ArrayList<>();

        ac.add(new Uniforms());
        ac.add(new Book());

        BusinessClassListupdateSearchResults(ac, Text);
    }

    /**
     *
     * @param it
     */
    public static void BusinessClassListupdate(ArrayList<? extends ItemClass> it) {

        it.stream().forEach((item) -> {
            item.GetAllItems();
        });

        System.out.println("Done populating lists");

    }//Generic method

    private static void BusinessClassListupdateSearchResults(ArrayList<? extends ItemClass> it, String Text) {

        it.stream().map((item) -> {

            item.SeacrchItem(Text, Type);
            return item;
        }).forEach((_item) -> {
            System.out.println("Done populating lists");
        });
///need to change
        Lists.items.stream().forEach((it1) -> {
            System.out.println("lol");
        });
    }
    private void tbl_UniformMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_UniformMouseClicked
        ShowuniformFields();
        //tbl_Uniform.setRowSelectionInterval(0, 0);
        selectedi = tbl_Uniform.getSelectedRow();
        Type = "uniform";
        //selectedi = tbl_Uniform.getSelectedRow();
        SetboxValues();


    }//GEN-LAST:event_tbl_UniformMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        if ("uniform".equals(Type)) {
            this.setVisible(false);
            Add_Uniform au = new Add_Uniform();
            au.setVisible(true);

        } else {
            this.setVisible(false);
            Add_Book b = new Add_Book();
            b.setVisible(true);
        }


    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        if (change = true) {

            switch (Type.toLowerCase()) {
                case "book":

                    BookListUpdateSet();
                    if (!Lists.bk.Update()) {

                        System.out.println("Updated");
                    } else {
                        System.out.println("Failed Updated");
                    }

                    break;
                case "uniform":
                    UniformListUpdateSet();
                    if (!Lists.uf.Update()) {

                        System.out.println("Updated");
                    } else {
                        System.out.println("Failed Updated");
                    }

                    break;
            }

            RefreshTables();

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void BookListUpdateSet() {

        ID = dtm_book.getValueAt(selectedi, 0).toString();

        Lists.bk = new Book();//created to initialize

        Lists.bk.setItemID(Integer.parseInt(ID));
        Lists.bk.setBook_name(txt_name.getText());
        Lists.bk.setAuthor("keletso");//must change
        Lists.bk.setGenre(cbo_Genre.getSelectedItem().toString());
        Lists.bk.setDescription(txt_desc.getText());
        Lists.bk.setPublishedDate(dt_Date.getDate());
        Lists.bk.setQuantity(Integer.parseInt(txt_Quantity.getText()));
        Lists.bk.setPrice(Double.parseDouble(txt_Price.getText()));
    }//will return book to be updated

    private void UniformListUpdateSet() {

        ID = dtm_uniform.getValueAt(selectedi, 0).toString();

        Lists.uf = new Uniforms();
        Lists.uf.setItemID(Integer.parseInt(ID));
        Lists.uf.setPrice(Double.parseDouble(txt_Price.getText()));
        Lists.uf.setQuantity(Integer.parseInt(txt_Quantity.getText()));
        Lists.uf.setSize(cbo_Size.getSelectedItem().toString());
        Lists.uf.setType(txt_name.getText());
    }//will return uniform to be updated

    private void ShowUpdateFailed() {
        Component frame = null;
        JOptionPane.showMessageDialog(frame, "Failed");
        System.out.println(" failed to Update");
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        if ("uniform".equals(Type)) {

            DeleteUniform();

        } else {

            DeleteBook();

        }
        RefreshTables();//refreshes tables
//
//

    }//GEN-LAST:event_jButton2ActionPerformed
    private void ShowDeleted(String delStatus) {
        Component frame = null;
        JOptionPane.showMessageDialog(frame, "delStatus");
    }

    private void ShowUpdate(String updateStatus) {

        Component frame = null;
        JOptionPane.showMessageDialog(frame, updateStatus);
    }

    private void ShowInserted(String insertStatus) {

        Component frame = null;
        JOptionPane.showMessageDialog(frame, insertStatus);
    }

    private void DeleteBook() {

        ID = dtm_book.getValueAt(selectedi, 0).toString();
        selectedi = tbl_Book.getSelectedRow();
        Lists.bk = new Book();
        Lists.bk.setItemID(Integer.parseInt(ID));

        if (!Lists.bk.Delete()) {

            selectedi = 0;
            ShowDeleted("deleted");

        } else {
            ShowDeleted("failed to delete");
        }
    }

    private void DeleteUniform() {

        ID = dtm_uniform.getValueAt(selectedi, 0).toString();
        selectedi = tbl_Uniform.getSelectedRow();
        Lists.uf = new Uniforms();
        Lists.uf.setItemID(Integer.parseInt(ID));

        if (!Lists.uf.Delete()) {

            ShowDeleted("deleted");
            selectedi = 0;

        } else {
            ShowDeleted("failed to delete");
        }

    }

    private void RefreshTables() {
        book_change = false;
        uniform_change = false;
        change = false;
        Type = "uniform";//sets default type
        ShowuniformFields();

        PopulateJtable();
    }
    private void txt_namePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txt_namePropertyChange
        // TODO add your handling code here:
        changedProperty();
        // selectedi = tbl_Uniform.getSelectedRow();

    }//GEN-LAST:event_txt_namePropertyChange

    private void dt_DatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dt_DatePropertyChange
        // TODO add your handling code here:
        changedProperty();
    }//GEN-LAST:event_dt_DatePropertyChange

    private void txt_SearchPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txt_SearchPropertyChange
        // TODO add your handling code here:


    }//GEN-LAST:event_txt_SearchPropertyChange

    private void txt_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_SearchActionPerformed
        // TODO add your handling code here:
        //  System.out.println("something to search");

    }//GEN-LAST:event_txt_SearchActionPerformed

    private void txt_SearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_SearchKeyTyped
 
    }//GEN-LAST:event_txt_SearchKeyTyped

    private void txt_SearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_SearchKeyReleased
        // TODO add your handling code here:
        String search;

        if (txt_Search.getText() != null && !txt_Search.getText().isEmpty()) {
            search = txt_Search.getText();
            System.out.println(search);

            Lists.item = new Book();

            PopLitsSeach(search);
            //newBuild();
            PopualteJtableSearchResults();
           
        }
    }//GEN-LAST:event_txt_SearchKeyReleased

    private void tbl_BookFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tbl_BookFocusGained
        //tbl_Uniform.clearSelection(); // TODO add your handling code here:
    }//GEN-LAST:event_tbl_BookFocusGained

    private void tbl_BookMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_BookMouseEntered
        // TODO add your handling code here:

    }//GEN-LAST:event_tbl_BookMouseEntered

    private void tbl_UniformMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_UniformMouseEntered
        // TODO add your handling code here:


    }//GEN-LAST:event_tbl_UniformMouseEntered

    private void tbl_BookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_BookMouseClicked
        // TODO add your handling code here:
        ShowBookFields();
        //tbl_Book.setRowSelectionInterval(0, 0);
        Type = "book";
        selectedi = tbl_Book.getSelectedRow();
        SetboxValues();//sets bindings
    }//GEN-LAST:event_tbl_BookMouseClicked

    private void txt_QuantityPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txt_QuantityPropertyChange
        // TODO add your handling code here:
        changedProperty();
    }//GEN-LAST:event_txt_QuantityPropertyChange

    private void txt_PricePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txt_PricePropertyChange
        // TODO add your handling code here:
        change = true;
        if ("book".equals(Type)) {
            book_change = true;
            uniform_change = false;
        } else {
            uniform_change = true;
            book_change = false;
        }
    }//GEN-LAST:event_txt_PricePropertyChange

    private void txt_AuthorPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txt_AuthorPropertyChange
        // TODO add your handling code here:
        change = true;
        if ("book".equals(Type)) {
            book_change = true;
            uniform_change = false;
        } else {
            uniform_change = true;
            book_change = false;
        }
    }//GEN-LAST:event_txt_AuthorPropertyChange

    private void cbo_SizePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cbo_SizePropertyChange
        // TODO add your handling code here:
        changedProperty();
    }//GEN-LAST:event_cbo_SizePropertyChange

    private void cbo_GenrePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cbo_GenrePropertyChange
        // TODO add your handling code here:
        changedProperty();
    }//GEN-LAST:event_cbo_GenrePropertyChange

    private void txt_descPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txt_descPropertyChange
        // TODO add your handling code here:
        changedProperty();
    }//GEN-LAST:event_txt_descPropertyChange

    private void btn_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refreshActionPerformed
        // TODO add your handling code here:

        book_change = false;
        uniform_change = false;
        change = false;
        //Type = "uniform";//sets default type
        if (Type == "uniform") {

            ShowuniformFields();
        } else {
            ShowBookFields();
        }

        PopulateJtable();//Populates Both tables
        PopGenreTxt();//pops genres
        PopSizes();//populates sizes
    }//GEN-LAST:event_btn_refreshActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:

        CreateReportPdf c = new CreateReportPdf();
        c.ExportInfo(tbl_Book, tbl_Uniform);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here: 
        Store_Management_Menu sm = new Store_Management_Menu();
        sm.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void changedProperty() {
        change = true;
        if ("book".equals(Type)) {
            book_change = true;
            uniform_change = false;
        } else {
            uniform_change = true;
            book_change = false;
        }
    }//changed flags

    private void ShowuniformFields() {
        tbl_Book.clearSelection();

        lbl_Size.setVisible(true);
        cbo_Size.setVisible(true);
        lbl_Author.setVisible(false);
        txt_Author.setVisible(false);

        cbo_Genre.setVisible(false);
        lbl_desc.setVisible(false);
        lbl_Genre.setVisible(false);
        lbl_name.setVisible(false);
        txt_name.setVisible(false);

        txt_desc.setVisible(false);
    }

    private void ShowBookFields() {
        tbl_Uniform.clearSelection();
        lbl_Size.setVisible(false);
        cbo_Size.setVisible(false);
        lbl_Author.setVisible(true);
        cbo_Genre.setVisible(true);
        lbl_Genre.setVisible(true);
        lbl_desc.setVisible(true);
        txt_desc.setVisible(true);
        lbl_name.setVisible(true);
        txt_name.setVisible(true);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Manage_Stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Manage_Stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Manage_Stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Manage_Stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Manage_Stock().setVisible(true);
            }
        });
    }

    private static void newBuild() {

        System.out.println("Entered meth");

        //sets rows to zero
        dtm_book.setRowCount(0);
        dtm_uniform.setRowCount(0);

        String[] UniformItems = new String[8];
        String[] BookItems = new String[11];

        System.out.println("About to start foreach");
        for (ItemClass item : Lists.items) {

            switch (item.getClass().getSimpleName().toLowerCase()) {

                case "uniforms":
                    Lists.uf = (Uniforms) item;
                    // {"ID", "Type","Size", "Quantity", "Price","Total"};
                    UniformItems[0] = String.valueOf(Lists.uf.getItemID());
                    UniformItems[1] = String.valueOf(Lists.uf.getType());//need to fix
                    UniformItems[2] = String.valueOf(Lists.uf.getItemDate());

                    UniformItems[3] = String.valueOf(Lists.uf.getSize());
                    UniformItems[4] = String.valueOf(Lists.uf.getQuantity());
                    UniformItems[5] = String.valueOf(Lists.uf.getPrice());
                    UniformItems[6] = String.valueOf(Lists.uf.TotalPrice());
                    UniformItems[7] = "null";
                    dtm_uniform.addRow(UniformItems);

                    break;

                case "book":
                    //  {"ID", "Name", "Author", "Description", "Date published", "Date Added", "Genre", "Quanitity","Price","Total"};

                    Lists.bk = (Book) item;

                    BookItems[0] = String.valueOf(Lists.bk.getItemID());
                    BookItems[1] = String.valueOf(Lists.bk.getBook_name());
                    BookItems[2] = String.valueOf(Lists.bk.getAuthor());
                    BookItems[3] = String.valueOf(Lists.bk.getDescription());
                    BookItems[4] = String.valueOf(Lists.bk.getPublishedDate());

                    BookItems[5] = String.valueOf(Lists.bk.getItemDate());
                    ;
                    BookItems[6] = String.valueOf(Lists.bk.getGenre());
                    ;
                    BookItems[7] = String.valueOf(Lists.bk.getQuantity());
                    BookItems[8] = String.valueOf(Lists.bk.getPrice());
                    BookItems[9] = String.valueOf(Lists.bk.TotalPrice());
                    BookItems[10] = "null";

                    dtm_book.addRow(BookItems);//adds the new Row

                    break;

            }

            //UniformItems[0] = String.valueOf(item.getItemID());
            // System.out.println(item.getClass().getName());
//            r = item.TotalPrice();
//            UniformItems[5] = String.valueOf(r);
        }

    }

    private void PopualteJtableSearchResults() {
        newBuild();

        switch (Type.toLowerCase()) {
            case "book":
//
//                jScrollPane1.setViewportView(tbl_Book);
//                tbl_Book.setRowSelectionInterval(0, 0);
                break;
            case "uniform":
//                jScrollPane1.setViewportView(tbl_Uniform);
//                tbl_Uniform.setRowSelectionInterval(0, 0);
                break;
        }

        SetboxValues();
    }

    private void SetboxValues() {

        switch (Type) {
            case "uniform":

                selectedi = tbl_Uniform.getSelectedRow();
                // {"ID", "Type", "Date Added", "Size", "Quantity", "Price", "Total"};
                // txt_name.setText(dtm_uniform.getValueAt(selectedi, 1).toString());
                dt_Date.setDate(Date.valueOf(dtm_uniform.getValueAt(selectedi, 2).toString()));

                //need type drop down
                txt_Quantity.setText(dtm_uniform.getValueAt(selectedi, 4).toString());
                txt_Price.setText(dtm_uniform.getValueAt(selectedi, 5).toString());
                cbo_Size.setSelectedItem(dtm_uniform.getValueAt(selectedi, 3).toString());

                break;
            case "book":

                //{"ID", "Name", "Author", "Description", "Date published", "Date Added", "Genre", "Quanitity", "Price", "Total"};
                selectedi = tbl_Book.getSelectedRow();
                txt_name.setText(dtm_book.getValueAt(selectedi, 1).toString());
                txt_Author.setText(dtm_book.getValueAt(selectedi, 2).toString());
                txt_desc.setText(dtm_book.getValueAt(selectedi, 3).toString());
                dt_Date.setDate(Date.valueOf(dtm_book.getValueAt(selectedi, 5).toString()));
                cbo_Genre.setSelectedItem(dtm_book.getValueAt(selectedi, 6).toString());

                //need to fill combo box 6
                txt_Quantity.setText(dtm_book.getValueAt(selectedi, 7).toString());
                txt_Price.setText(dtm_book.getValueAt(selectedi, 8).toString());

                break;
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_refresh;
    private org.jdesktop.swingx.JXComboBox cbo_Genre;
    private org.jdesktop.swingx.JXComboBox cbo_Size;
    private org.jdesktop.swingx.JXDatePicker dt_Date;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private org.jdesktop.swingx.JXLabel jXLabel1;
    private org.jdesktop.swingx.JXLabel lbl_Author;
    private javax.swing.JLabel lbl_Date;
    private org.jdesktop.swingx.JXLabel lbl_Genre;
    private javax.swing.JLabel lbl_Price;
    private javax.swing.JLabel lbl_Quantity;
    private org.jdesktop.swingx.JXLabel lbl_Size;
    private javax.swing.JLabel lbl_desc;
    private javax.swing.JLabel lbl_name;
    private com.seaglasslookandfeel.ui.SeaGlassComboBoxUI seaGlassComboBoxUI1;
    private com.seaglasslookandfeel.ui.SeaGlassComboBoxUI seaGlassComboBoxUI2;
    private com.seaglasslookandfeel.ui.SeaGlassComboBoxUI seaGlassComboBoxUI3;
    private org.jdesktop.swingx.JXTable tbl_Book;
    private org.jdesktop.swingx.JXTable tbl_Uniform;
    private org.jdesktop.swingx.JXTextField txt_Author;
    private javax.swing.JTextField txt_Price;
    private javax.swing.JTextField txt_Quantity;
    private org.jdesktop.swingx.JXTextField txt_Search;
    private org.jdesktop.swingx.JXTextArea txt_desc;
    private javax.swing.JTextField txt_name;
    // End of variables declaration//GEN-END:variables
}
